name: Release

on:
    push:
        branches:
            - main

# Cancel concurrent runs for the same ref
concurrency: ${{ github.workflow }}-${{ github.ref }}

# Reuse the same versions & caching approach as CI
env:
    NODE_VERSION: '22.20.0'
    PNPM_VERSION: '10.17.1'

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write
            issues: write
            id-token: write

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: pnpm

            # Restore/install dependencies like CI
            - name: Cache node_modules
              id: cache-node-modules
              uses: actions/cache@v4
              with:
                  path: |
                      node_modules
                      packages/*/node_modules
                      app/*/node_modules
                  key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: |
                      node-modules-${{ runner.os }}-

            - name: Install dependencies
              if: steps.cache-node-modules.outputs.cache-hit != 'true'
              run: pnpm install --frozen-lockfile

            # Restore/build dist like CI
            - name: Cache build outputs
              id: cache-build
              uses: actions/cache@v4
              with:
                  path: |
                      packages/*/dist
                      packages/*/*.tsbuildinfo
                      app/*/build
                      app/*/dist
                  key: build-${{ runner.os }}-${{ hashFiles('packages/*/src/**', 'app/*/src/**', 'tsconfig*.json', 'pnpm-lock.yaml') }}
                  restore-keys: |
                      build-${{ runner.os }}-

            - name: Build packages
              if: steps.cache-build.outputs.cache-hit != 'true'
              run: pnpm build

            # Changesets: create/advance Version PR or publish on merge
            - name: Create Release PR or Publish
              uses: changesets/action@v1
              with:
                  version: pnpm cs:version
                  publish: pnpm cs:publish
                  commit: 'chore: version packages'
                  title: 'Version Packages'
                  createGithubReleases: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
